"use server";

import { FormSchema } from "@/shema";
import * as z from "zod";

import { GoogleSpreadsheet } from 'google-spreadsheet';
import { JWT } from 'google-auth-library';


export const constactus = async (
  values: z.infer<typeof FormSchema>,
  callbackUrl?: string | null,
) => {
  const validatedFields = FormSchema.safeParse(values);

  if (!validatedFields.success) {
    return { error: "Invalid fields!" };
  }

  const { email ,name,city } = validatedFields.data;

try {
    const serviceAccountAuth = new JWT({
  // env var values here are copied from service account credentials generated by google
  // see "Authentication" section in docs for more info
  email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL,
  key: process.env.GOOGLE_PRIVATE_KEY,
  scopes: [
    'https://www.googleapis.com/auth/spreadsheets',
  ],
});
const doc = new GoogleSpreadsheet( process.env.GOOGLE_SHEET_ID!, serviceAccountAuth);
await doc.loadInfo(); // loads document properties and worksheets

const sheet = doc.sheetsByIndex[0];
await sheet.addRow({name,email,city})

} catch (err) {
    console.log(err);
    return { error: "Something went wrong!" }
}

console.log(email)
return { success: "Thank you! Your submission has been received!" };}
